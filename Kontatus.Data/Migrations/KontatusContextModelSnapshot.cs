// <auto-generated />
using System;
using Kontatus.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Kontatus.Data.Migrations
{
    [DbContext(typeof(KontatusContext))]
    partial class KontatusContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Kontatus.Domain.Entity.Arquivo", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Beneficio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CaminhoImagem")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataUpload")
                        .HasColumnType("datetime2");

                    b.Property<string>("NomeBlob")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("NomeCompleto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Tamanho")
                        .HasColumnType("float");

                    b.Property<int>("UsuarioID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("UsuarioID");

                    b.ToTable("Arquivo");
                });

            modelBuilder.Entity("Kontatus.Domain.Entity.DadosIN100", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Banco")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BeneficiarioID")
                        .HasColumnType("int");

                    b.Property<string>("Beneficio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BeneficioID")
                        .HasColumnType("int");

                    b.Property<string>("Cpf")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DDB")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DIB")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<string>("DataAtualizacao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<string>("DataNascimento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmprestimoBloqueado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmprestimoElegivel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Idade")
                        .HasColumnType("int");

                    b.Property<int?>("InstituicaoFinanceiraID")
                        .HasColumnType("int");

                    b.Property<string>("MargemConsignavel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MargemConsignavelCartao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("MargemNula")
                        .HasColumnType("bit");

                    b.Property<string>("MeioPagamento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MeioPagamentoID")
                        .HasColumnType("int");

                    b.Property<string>("MensagemServidor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeAgencia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroAgencia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroBeneficio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroContaCorrente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrigemBancoID")
                        .HasColumnType("int");

                    b.Property<string>("PossuiProcurador")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PossuiRepresentanteLegal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QtdEmprestimosAtivosSuspensos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RMCAtivo")
                        .HasColumnType("int");

                    b.Property<int?>("RequisicaoID")
                        .HasColumnType("int");

                    b.Property<string>("Situacao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SolicitacaoID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UFBeneficio")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("ResultadosIN100");
                });

            modelBuilder.Entity("Kontatus.Domain.Entity.LogUsuario", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Controle")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Metodo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int?>("RegistroAfetadoID")
                        .HasColumnType("int");

                    b.Property<string>("RegistroAntigo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegistroNovo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrlAcionada")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("UsuarioID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("RegistroAfetadoID");

                    b.HasIndex("UsuarioID");

                    b.ToTable("LogUsuario");
                });

            modelBuilder.Entity("Kontatus.Domain.Entity.Login", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("Principal")
                        .HasColumnType("bit");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoLoginID")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("UsuarioID");

                    b.ToTable("Login");
                });

            modelBuilder.Entity("Kontatus.Domain.Entity.Perfil", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Administrador")
                        .HasColumnType("bit");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("ID");

                    b.ToTable("Perfil");
                });

            modelBuilder.Entity("Kontatus.Domain.Entity.SolicitacaoIN100", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<bool?>("CreditoExtrato")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<string>("NumeroBeneficio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SolicitacaoID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StatusProcessamento")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("UsuarioID");

                    b.ToTable("SolicitacoesIN100");
                });

            modelBuilder.Entity("Kontatus.Domain.Entity.SolicitacaoOffline", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("CPF")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<string>("NumeroBeneficio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UsuarioID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("UsuarioID");

                    b.ToTable("SolicitacoesOffline");
                });

            modelBuilder.Entity("Kontatus.Domain.Entity.Token", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataExpiracao")
                        .HasColumnType("datetime2");

                    b.Property<string>("JWT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsuarioID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("UsuarioID");

                    b.ToTable("Token");
                });

            modelBuilder.Entity("Kontatus.Domain.Entity.Usuario", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AcessosSimultaneos")
                        .HasColumnType("int");

                    b.Property<bool>("Administrador")
                        .HasColumnType("bit");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LimiteDiario")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool?>("OfflineIlimitado")
                        .HasColumnType("bit");

                    b.Property<int>("SaldoExtrato")
                        .HasColumnType("int");

                    b.Property<int>("SaldoIN100")
                        .HasColumnType("int");

                    b.Property<int?>("SaldoOffline")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ValidadePlano")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("Kontatus.Domain.Entity.Arquivo", b =>
                {
                    b.HasOne("Kontatus.Domain.Entity.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Kontatus.Domain.Entity.LogUsuario", b =>
                {
                    b.HasOne("Kontatus.Domain.Entity.Usuario", "RegistroAfetado")
                        .WithMany()
                        .HasForeignKey("RegistroAfetadoID");

                    b.HasOne("Kontatus.Domain.Entity.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RegistroAfetado");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Kontatus.Domain.Entity.Login", b =>
                {
                    b.HasOne("Kontatus.Domain.Entity.Usuario", "Usuario")
                        .WithMany("Logins")
                        .HasForeignKey("UsuarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Kontatus.Domain.Entity.SolicitacaoIN100", b =>
                {
                    b.HasOne("Kontatus.Domain.Entity.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioID");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Kontatus.Domain.Entity.SolicitacaoOffline", b =>
                {
                    b.HasOne("Kontatus.Domain.Entity.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioID");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Kontatus.Domain.Entity.Token", b =>
                {
                    b.HasOne("Kontatus.Domain.Entity.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Kontatus.Domain.Entity.Usuario", b =>
                {
                    b.Navigation("Logins");
                });
#pragma warning restore 612, 618
        }
    }
}
